name: 'Organization workflow action'
description: 'Action to register organization workflow'
permissions:
  checks: write
branding:
  icon: 'check-circle'
  color: 'white'
inputs:
  owner: 
    description: 'Owner of the repo'
    required: true
  repo: 
    description: 'Repository for the scan'
    required: true
  name: 
    description: 'Name of the job being invoked'
    required: true
  head_sha: 
    description: 'Head SHA'
    required: true
  status: 
    description: 'Status of the check run'
    required: true
  github_token: 
    description: 'GitHub Token to invoke the checks api'
    required: true
  event_type:
    description: 'event_type triggered by the GitHub App (provided by GitHub app via `github.event.client_payload.event_type`)'
    required: true
runs:
  using: "composite"
  steps: 
    # Create check run
    - name: GitHub API Request to create a check
      uses: octokit/request-action@v2.x
      id: create_check_run
      with:
        route: POST /repos/{owner}/{repo}/check-runs
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        INPUT_OWNER: ${{ inputs.owner }}
        INPUT_REPO: ${{ inputs.repo }}
        INPUT_NAME: ${{ inputs.name }}
        INPUT_STATUS: ${{ inputs.status }}
        INPUT_HEAD_SHA: ${{ inputs.head_sha }}
        INPUT_OUTPUT: | # The | is significant!
          title: Test check run title
          summary: A summary of the test check run
    - name: Create metadata
      id: create-metadata-json
      run: |
        echo '{
          "check_run_type": "${{ inputs.event_type }}",
          "repository_name": "${{ inputs.repo }}",
          "check_run_id": ${{ fromJson(steps.create_check_run.outputs.data).id }}
        }' > workflow-metadata.json
      shell: bash
    - name: Save metadata
      uses: actions/upload-artifact@v3
      with:
        name: workflow-metadata
        path: workflow-metadata.json
  
